# Global Docker image for the runner
image: node:10

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

# Templates
.Build template: &build_template
  stage: build
  before_script:
    - npm ci
  script:
    - npm run build
  artifacts:
    name: build
    paths:
      - build

.Deploy template: &deploy_template
  image: python:latest
  stage: deploy
  before_script:
    - pip install awscli
  script:
    - echo /***********************************************************/
    - echo AWS_BUCKET_NAME = $AWS_BUCKET_NAME
    - echo AWS_ACCESS_KEY_ID = $AWS_ACCESS_KEY_ID
    - echo AWS_SECRET_ACCESS_KEY = $AWS_SECRET_ACCESS_KEY
    - aws s3 sync build s3://$AWS_BUCKET_NAME

# Build Jobs
Dev build:
  except:
    - test
    - master
  <<: *build_template

Test build:
  only:
    refs:
      - test
  <<: *build_template

Prod build:
  only:
    refs:
      - master
  <<: *build_template

# Deployment Jobs
Dev deploy:
  only:
    refs:
      - development
    changes:
      - src/**/*
      - static/**/*
      - content/**/*
      - package.json
      - package-lock.json
      - .gitlab-ci.yml
  dependencies:
    - Dev build
  variables:
    AWS_BUCKET_NAME: $DEV_AWS_BUCKET_NAME
    AWS_ACCESS_KEY_ID: $DEV_AWS_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $DEV_AWS_SECRET_ACCESS_KEY
  <<: *deploy_template

Test deploy:
  only:
    refs:
      - test
    changes:
      - src/**/*
      - static/**/*
      - content/**/*
      - package.json
      - package-lock.json
      - .gitlab-ci.yml
  dependencies:
    - Test build
  variables:
    AWS_BUCKET_NAME: $TEST_AWS_BUCKET_NAME
    AWS_ACCESS_KEY_ID: $TEST_AWS_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $TEST_AWS_SECRET_ACCESS_KEY
  <<: *deploy_template
